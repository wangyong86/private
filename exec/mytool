#!/bin/bash
#set -x
shopt -s expand_aliases

function help()
{
    echo " mytool help:"
    echo "          -c: configure matrixdb/greenplum db"
    echo "          -d: make demo cluster. default: 1p; -t: 3p 3m"
    echo "          -i: build cscope index and ctags"
    echo "          -l: reconstruct demo cluster lighweight"
    echo "          -s: import greenplum and demo cluster config"
    echo "          -t: matrixdb regression test"
    echo "          -w: reconstruct demo cluster heavily, include rebuild cluster"
}

if [ $# -eq 0 ]; then
    echo " must has parameter"
    help;
    exit -1
fi

source ~/.bash_profile
#echo $1
if [ "$1" == "-i" ]; then
	#mostly, we build meta for matrixdb
	dir=$GPSRC
	opt="-m"

	if [ $# -eq 2 ]; then
		dir=$2
		opt=""
	fi
    cd $dir
	find `pwd` -type f \( -name "*.[ch]" -o -name "*.cpp" -o -name "*.cc" -o -name "*.go" -o -name "*.hpp" -o -name "*.py" \) |grep -v "/test" |grep -v "mars/"|grep -v aws-sdk-cpp|grep -v protobuf >cscope.files
    cscope -Rbkq -i cscope.files 2>cscope.temp
	grep -v cannot cscope.temp
	rm -f cscope.temp

    echo "build cscope index finished, file is located at current directory"

	#rebuild ctags
	make_ctags $opt
    cd -
fi 

#create demo-cluster simple
baseport=5658
segnum=3
if [ "$1" == "-d" ]; then
    cd $GPSRC
	if [ $# -eq 2 ]; then

		# regression test mode: 3 segment, 3 mirror
		if [ "$2" == "-t" ]; then 
    		make create-demo-cluster PORT_BASE=$baseport NUM_PRIMARY_MIRROR_PAIRS=$segnum
		elif [ "$2" == "-f" ]; then  #fast mode
    		make create-demo-cluster PORT_BASE=$baseport WITH_MIRRORS=false
		else
			echo "unsupported parameters:" $@
		fi
	else # debug mode
    	make create-demo-cluster PORT_BASE=$baseport NUM_PRIMARY_MIRROR_PAIRS=1 WITH_MIRRORS=false
	fi

    if [ $? == 1 ]; then
        exit
    fi

    createdb t
#	gpconfig -c gp_vmem_idle_resource_timeout -v 0
#	gpconfig -c enable_parallel_mode -v off 
	gpstop -u

    cd -
fi

#full refresh system-weight refresh 
if [ "$1" == "-w" ]; then
	parallel=72
	host=`hostname`
	if [ $host == "wydev" ]; then
		parallel=8
	fi
	code && make distclean && mytool -c && make -sj$parallel && mkmars && code && make -j8 install && gpstop -raqi
fi

if [ "$1" == "-l" ]; then
	host=`hostname`
	if [ $host == "wydev" ]; then
		parallel=8
	fi

	code
	if [ $# -eq 2 ]; then
		if [ "$2" == "-c" ]; then
			make clean
		fi
	fi

	make -j$parallel && make -j$parallel install && gpstop -raqi
	#make -sj && mkmars && code && make -j install && gpstop -raqi
	cd -
fi

if [ "$1" == "-w" ]; then
	parallel=72
	host=`hostname`
	if [ $host == "wydev" ]; then
		parallel=8
	fi
	code && make clean && make -sj$parallel && mkmars && code && make -j8 install && gpstop -qar
	#code && make clean && make -sj$parallel && mkmars && code && make -j8 install && gpstop -qa && mytool -d 
fi

OLDGPHOME=$GPHOME
if [ "$1" == "-c" ]; then
	#cloudnative develope mode
	CFLAGS='-O0 -g3' CXXFLAGS='-O0 -g3' ./configure --with-perl --with-python --enable-debug --enable-cassert --enable-orca --disable-gpcloud --with-zstd --enable-gpfdist --enable-depend --with-openssl --prefix=$OLDGPHOME

	# matrixdb develope mode
	#CFLAGS='-O0 -g3' CXXFLAGS='-O0 -g3' ../matrixdb/configure --with-perl --with-python --disable-debug --disable-cassert --disable-orca --disable-gpcloud --with-zstd --enable-gpfdist --enable-depend --enable-enterprise --without-mysqlfdw --without-mongofdw --with-openssl --without-licensecheck --enable-mxvector --prefix=$OLDGPHOME
    
	#simple perf mode
	#CFLAGS='-O3 -g3' CXXFLAGS='-O3 -g3' ./configure --with-perl --with-python --disable-debug --enable-cassert --disable-orca --disable-gpcloud --with-zstd --enable-gpfdist --enable-depend --enable-enterprise --without-mysqlfdw --without-mongofdw --with-openssl --without-licensecheck --enable-mxvector --prefix=$OLDGPHOME

	#Golden config for gdb acceleration
	#CFLAGS='-O3 -g3' CXXFLAGS='-O3 -g3' ./configure --with-zstd --with-perl --with-python --disable-debug --disable-cassert --disable-orca --disable-gpcloud --with-zstd --enable-gpfdist --enable-depend --enable-enterprise --without-mysqlfdw --without-mongofdw --with-openssl --without-licensecheck --enable-mxvector --prefix=$OLDGPHOME

    #CFLAGS='-O0 -g -msse4.1 -funroll-loops -ftree-vectorize' CXXFLAGS='-O0 -g -msse4.1 -funroll-loops -ftree-vectorize' ./configure --disable-orca --enable-cassert --with-openssl --with-perl --with-python --with-libxml --with-gssapi --enable-debug --enable-depend --prefix=$OLDGPHOME
    #CFLAGS="-O0 -g" CXXFLAGS="-O0 -g" ./configure --prefix=${OLDGPHOME} --with-postgresfdw --enable-enterprise --without-mysqlfdw --without-mongofdw --with-pg-hint-plan --with-perl --with-python --disable-orca --with-openssl --with-ldap --with-libcurl --with-libxml --enable-mapreduce --enable-orafce --enable-ic-proxy --enable-mxvector --without-quicklz --disable-tap-tests --without-licensecheck --enable-debug-extensions

	#disable orca to reduce memory usage for single segment server. specifically, gp_vmem_protect_limit
    #CFLAGS='-O0 -g' CXXFLAGS='-O0 -g' ./configure --prefix=${OLDGPHOME} --with-perl --with-python --disable-orca --with-openssl --with-ldap --with-libcurl --with-libxml --enable-mapreduce -enable-orafce --enable-ic-proxy --without-quicklz --disable-tap-tests --without-licensecheck --enable-debug-extensions

    #align pr pipeline, with/out mxv, debug mode
    #CFLAGS="-O0 -g -fdiagnostics-color=always" CXXFLAGS="-O0 -g -fdiagnostics-color=always" ./configure --prefix=${OLDGPHOME} --with-postgresfdw --enable-enterprise --without-mysqlfdw --without-mongofdw --with-pg-hint-plan --with-perl --with-python --disable-orca --with-openssl --with-ldap --with-libcurl --with-libxml --enable-mapreduce --enable-orafce --enable-ic-proxy --without-quicklz --disable-tap-tests --without-licensecheck --enable-debug-extensions
    #CFLAGS="-O0 -g" CXXFLAGS="-O0 -g" ./configure --prefix=${OLDGPHOME} --with-postgresfdw --enable-enterprise --without-mysqlfdw --without-mongofdw --with-pg-hint-plan --with-perl --with-python --disable-orca --with-openssl --with-ldap --with-libcurl --with-libxml --enable-mapreduce --enable-orafce --enable-ic-proxy --without-quicklz --disable-tap-tests --without-licensecheck --enable-debug-extensions --enable-mxvector --enable-depend

    #llvm?
    #CFLAGS="-O0 -g" CXXFLAGS="-O0 -g" ./configure --prefix=${OLDGPHOME} --with-postgresfdw --enable-enterprise --without-mysqlfdw --without-mongofdw --with-pg-hint-plan --with-perl --with-python --disable-orca --with-openssl --with-ldap --with-libcurl --with-libxml --enable-mapreduce --enable-orafce --enable-ic-proxy --enable-mxvector --without-quicklz --disable-tap-tests --without-licensecheck --enable-debug-extensions --with-llvm

    #open dtrace
    #CFLAGS='-O0 -g' CXXFLAGS='-O0 -g' ./configure --disable-orca --enable-cassert --with-openssl --with-perl --with-python --with-libxml --with-gssapi --enable-debug --enable-depend --enable-dtrace --prefix=$OLDGPHOME

    #CFLAGS='-O0 -g' CXXFLAGS='-O0 -g' ./configure --disable-orca --enable-cassert --with-openssl --with-perl --with-python --with-libxml --with-gssapi --enable-debug --enable-depend --with-numa --prefix=$OLDGPHOME

    #CFLAGS='-O0 -g' CXXFLAGS='-O0 -g' ./configure --with-blocksize=32 --disable-orca --enable-cassert --with-openssl --with-perl --with-python --with-libxml --with-gssapi --enable-debug --enable-depend --prefix=$OLDGPHOME
	#cd -
    echo "config matrixdb finished"
fi

#install check
if [ "$1" == "-t" ]; then
	code
    #PGOPTIONS='-c enable_parallel_mode=off -c enable_mergejoin=off -c enable_nestloop=off' make installcheck -C $RTPATH 
    #PGOPTIONS='-c enable_parallel_mode=off -c enable_mergejoin=off -c enable_nestloop=off -c enable_partitionwise_join=off -c enable_partitionwise_aggregate=off -c gp_enable_global_deadlock_detector=off' make installcheck -C $RTPATH 
    PGOPTIONS='-c enable_parallel_mode=off -c enable_mergejoin=off -c enable_nestloop=off -c enable_partitionwise_join=off -c enable_partitionwise_aggregate=off' make installcheck -C $RTPATH 
    cd -
fi

if [ "$1" == "-m" ]; then
	code
    PGOPTIONS='-c enable_parallel_mode=off -c enable_mergejoin=off -c enable_nestloop=off' make installcheck -C $MPATH 
    cd -
fi
